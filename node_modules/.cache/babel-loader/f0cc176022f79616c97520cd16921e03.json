{"remainingRequest":"/home/darkwing/dev/home_pod/client/node_modules/babel-loader/lib/index.js!/home/darkwing/dev/home_pod/client/node_modules/eslint-loader/index.js??ref--13-0!/home/darkwing/dev/home_pod/client/src/store/index.js","dependencies":[{"path":"/home/darkwing/dev/home_pod/client/src/store/index.js","mtime":1561900418453},{"path":"/home/darkwing/dev/home_pod/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkwing/dev/home_pod/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkwing/dev/home_pod/client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport http from \"../axios-instance\";\nimport router from \"../router\";\nVue.use(Vuex);\nconst store = new Vuex.Store({\n  modules: {},\n  state: {\n    isAuthenticated: false,\n    loading: false,\n    token: \"\",\n    message: \"\",\n    user: {}\n  },\n  mutations: {\n    loading: state => {\n      state.loading = !state.loading;\n    },\n    login_success: state => {\n      state.isAuthenticated = true;\n      state.loading = false;\n    },\n    logout: state => {\n      state.isAuthenticated = false;\n    },\n    setToken: (state, payload) => {\n      state.token = payload.token;\n      state.message = payload.message;\n    }\n  },\n  actions: {\n    LOGIN({\n      commit,\n      dispatch\n    }, payload) {\n      //commit(\"loading\");\n      http.post(\"/login\", {\n        username: payload.username,\n        password: payload.password\n      }).then(res => {\n        commit(\"setToken\", res.data);\n        commit(\"login_success\");\n        router.push(\"/\"); //commit(\"loading\");\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    LOGOUT({\n      commit\n    }) {\n      //logout\n      commit(\"loading\");\n      http.post(\"/logout\").then(res => {\n        commit(\"setMessage\", res.data);\n        router.push(\"/login\");\n        commit(\"logout\"); //TODO: remove all data from store\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n  },\n  getters: {\n    token({\n      token\n    }) {\n      return token;\n    }\n\n  }\n});\nexport default store;",{"version":3,"sources":["/home/darkwing/dev/home_pod/client/src/store/index.js"],"names":["Vue","Vuex","http","router","use","store","Store","modules","state","isAuthenticated","loading","token","message","user","mutations","login_success","logout","setToken","payload","actions","LOGIN","commit","dispatch","post","username","password","then","res","data","push","catch","error","console","log","LOGOUT","getters"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEAH,GAAG,CAACI,GAAJ,CAAQH,IAAR;AAEA,MAAMI,KAAK,GAAG,IAAIJ,IAAI,CAACK,KAAT,CAAe;AAC3BC,EAAAA,OAAO,EAAE,EADkB;AAE3BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,eAAe,EAAE,KADZ;AAELC,IAAAA,OAAO,EAAE,KAFJ;AAGLC,IAAAA,KAAK,EAAE,EAHF;AAILC,IAAAA,OAAO,EAAE,EAJJ;AAKLC,IAAAA,IAAI,EAAE;AALD,GAFoB;AAS3BC,EAAAA,SAAS,EAAE;AACTJ,IAAAA,OAAO,EAAEF,KAAK,IAAI;AAChBA,MAAAA,KAAK,CAACE,OAAN,GAAgB,CAACF,KAAK,CAACE,OAAvB;AACD,KAHQ;AAITK,IAAAA,aAAa,EAAEP,KAAK,IAAI;AACtBA,MAAAA,KAAK,CAACC,eAAN,GAAwB,IAAxB;AACAD,MAAAA,KAAK,CAACE,OAAN,GAAgB,KAAhB;AACD,KAPQ;AAQTM,IAAAA,MAAM,EAAER,KAAK,IAAI;AACfA,MAAAA,KAAK,CAACC,eAAN,GAAwB,KAAxB;AACD,KAVQ;AAWTQ,IAAAA,QAAQ,EAAE,CAACT,KAAD,EAAQU,OAAR,KAAoB;AAC5BV,MAAAA,KAAK,CAACG,KAAN,GAAcO,OAAO,CAACP,KAAtB;AACAH,MAAAA,KAAK,CAACI,OAAN,GAAgBM,OAAO,CAACN,OAAxB;AACD;AAdQ,GATgB;AAyB3BO,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,CAAC;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAD,EAAuBJ,OAAvB,EAAgC;AACnC;AACAhB,MAAAA,IAAI,CACDqB,IADH,CACQ,QADR,EACkB;AACdC,QAAAA,QAAQ,EAAEN,OAAO,CAACM,QADJ;AAEdC,QAAAA,QAAQ,EAAEP,OAAO,CAACO;AAFJ,OADlB,EAKGC,IALH,CAKQC,GAAG,IAAI;AACXN,QAAAA,MAAM,CAAC,UAAD,EAAaM,GAAG,CAACC,IAAjB,CAAN;AACAP,QAAAA,MAAM,CAAC,eAAD,CAAN;AACAlB,QAAAA,MAAM,CAAC0B,IAAP,CAAY,GAAZ,EAHW,CAIX;AACD,OAVH,EAWGC,KAXH,CAWUC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAGD,OAfH;AAgBD,KAnBM;;AAoBPG,IAAAA,MAAM,CAAC;AAAEb,MAAAA;AAAF,KAAD,EAAa;AACjB;AACAA,MAAAA,MAAM,CAAC,SAAD,CAAN;AACAnB,MAAAA,IAAI,CACDqB,IADH,CACQ,SADR,EAEGG,IAFH,CAEQC,GAAG,IAAI;AACXN,QAAAA,MAAM,CAAC,YAAD,EAAeM,GAAG,CAACC,IAAnB,CAAN;AACAzB,QAAAA,MAAM,CAAC0B,IAAP,CAAY,QAAZ;AACAR,QAAAA,MAAM,CAAC,QAAD,CAAN,CAHW,CAIX;AACD,OAPH,EAQGS,KARH,CAQSC,KAAK,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAVH;AAWD;;AAlCM,GAzBkB;AA6D3BI,EAAAA,OAAO,EAAE;AACPxB,IAAAA,KAAK,CAAC;AAAEA,MAAAA;AAAF,KAAD,EAAY;AACf,aAAOA,KAAP;AACD;;AAHM;AA7DkB,CAAf,CAAd;AAmEA,eAAeN,KAAf","sourcesContent":["import Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\nimport http from \"../axios-instance\";\r\nimport router from \"../router\";\r\n\r\nVue.use(Vuex);\r\n\r\nconst store = new Vuex.Store({\r\n  modules: {},\r\n  state: {\r\n    isAuthenticated: false,\r\n    loading: false,\r\n    token: \"\",\r\n    message: \"\",\r\n    user: {}\r\n  },\r\n  mutations: {\r\n    loading: state => {\r\n      state.loading = !state.loading;\r\n    },\r\n    login_success: state => {\r\n      state.isAuthenticated = true;\r\n      state.loading = false;\r\n    },\r\n    logout: state => {\r\n      state.isAuthenticated = false;\r\n    },\r\n    setToken: (state, payload) => {\r\n      state.token = payload.token;\r\n      state.message = payload.message;\r\n    }\r\n  },\r\n  actions: {\r\n    LOGIN({ commit, dispatch }, payload) {\r\n      //commit(\"loading\");\r\n      http\r\n        .post(\"/login\", {\r\n          username: payload.username,\r\n          password: payload.password\r\n        })\r\n        .then(res => {\r\n          commit(\"setToken\", res.data);\r\n          commit(\"login_success\");\r\n          router.push(\"/\");\r\n          //commit(\"loading\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          \r\n\r\n        });\r\n    },\r\n    LOGOUT({ commit }) {\r\n      //logout\r\n      commit(\"loading\");\r\n      http\r\n        .post(\"/logout\")\r\n        .then(res => {\r\n          commit(\"setMessage\", res.data);\r\n          router.push(\"/login\");\r\n          commit(\"logout\");\r\n          //TODO: remove all data from store\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  },\r\n  getters: {\r\n    token({ token }) {\r\n      return token;\r\n    }\r\n  }\r\n});\r\nexport default store;\r\n"]}]}